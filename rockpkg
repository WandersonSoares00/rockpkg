#!/bin/sh

export ext='rock'
export LC_ALL='C'
export LANG='C'
export config=/var/lib/rockpkg

destdir=/usr/lib/rockpkg
. "$destdir"/help
. "$destdir"/create
. "$destdir"/install
. "$destdir"/info

get_opt() {
    op="$1"
    case $op in
        --create|-c|--info|-I|--remove|-r|--help|-h|--list|-l)
            cmd="$op"
    ;;
        --install|-i)
            cmd="i"
    ;;
        --verbose|-v)
            verb='v'
    ;;
        *.${ext})
            pkg="$op"
    ;;
        *)
            prog="$op"
    ;;
    esac
    shift
}
 
[ -z $1 ] && { usage; exit 1; }

for param in "$@"; do
    if echo "$param" | grep -Eq "^-d="; then
        dest="${param#-d=}"
        dest="${dest%/}"
    fi
done

for param in "$@"; do
    get_opt "$param"
 
    if [ "$cmd" = "i" ] && [ -n "$pkg" ]; then
        install "$pkg" "$dest" && echo "Package installed successfully" || { echo "Error installing package $pkg" >&2; exit 1; }
        unset pkg
    fi
done

case "$cmd" in
    --intall|-i|i)
        exit
        ;;
    --create|-c)
        [ -z "$pkg" ] && { echo "Missing package name" >&2; exit 1; }
      
        pkg_check "$pkg"                     || { echo $err >&2; exit 1; }
    
        pkg_create "$pkg" $verb && echo $out || { echo $out >&2; exit 1; }
        exit 0 ;;
    --info|-I)

        if [ -z "$pkg" ]; then
            make_desc
        else
            show_desc "$pkg"
        fi
        exit 0 ;;
    --remove|-r)
        [ -z "$prog" ] && { echo "Missing program" >&2; exit 1; }
        
        . "$destdir"/remove
        cd $track
        found=false
        for f in *; do
            if echo "$f" | grep -wq "$prog"; then
                pkg_remove "$f"; found=true; break
            fi
        done
        if [ "$found" = false ]; then
            echo "Unable to locate program $prog" >&2; exit 1;
        else            
            echo "package removed successfully"
        fi

        exit 0 ;;
    --list|-l)
        show_progs
        exit 0 ;;
    --help|-h)
        usage
        exit 0 ;;
    *)
        usage
        exit 1 ;;
esac

